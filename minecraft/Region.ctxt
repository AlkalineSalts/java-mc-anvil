#BlueJ class context
comment0.target=Region
comment0.text=\n\ Write\ a\ description\ of\ class\ Region\ here.\n\n\ @author\ (your\ name)\n\ @version\ (a\ version\ number\ or\ a\ date)\n
comment1.params=file\ createEmpty
comment1.target=Region(java.io.File,\ boolean)
comment10.params=x\ z\ c
comment10.target=void\ setChunk(int,\ int,\ Chunk)
comment11.params=
comment11.target=void\ saveToFile()
comment12.params=alternate
comment12.target=void\ saveToFile(java.io.File)
comment13.params=o
comment13.target=boolean\ equals(java.lang.Object)
comment2.params=file
comment2.target=Region(java.io.File)
comment3.params=chunkX\ chunkZ
comment3.target=int\ headerOffset(int,\ int)
comment3.text=\n\ An\ example\ of\ a\ method\ -\ replace\ this\ comment\ with\ your\ own\n\n\ @param\ \ y\ \ a\ sample\ parameter\ for\ a\ method\n\ @return\ \ \ \ the\ sum\ of\ x\ and\ y\n
comment4.params=chunkX\ chunkZ
comment4.target=int\ timeStampOffset(int,\ int)
comment5.params=potential
comment5.target=boolean\ isRegionFile(java.lang.String)
comment6.params=chunkX\ chunkZ\ data
comment6.target=int\ getTimeStamp(int,\ int,\ byte[])
comment7.params=chunkX\ chunkZ\ data
comment7.target=int[]\ chunkLocation(int,\ int,\ byte[])
comment8.params=chunkX\ chunkZ\ data
comment8.target=byte[]\ getChunkData(int,\ int,\ byte[])
comment9.params=x\ z
comment9.target=Chunk\ getChunk(int,\ int)
numComments=14
